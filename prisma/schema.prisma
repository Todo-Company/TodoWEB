generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement()) @map("_id")
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                Int     @id @default(autoincrement()) @map("_id")
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement()) @map("_id")
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Todo {
  id           Int          @id @default(autoincrement()) @map("_id")
  completed    Boolean
  created      DateTime     @db.Date
  goalDate     DateTime     @db.Date
  title        String
  type         TodoEnum
  priority     PriorityEnum
  expectation  Int
  userId       Int
  parentTodoId Int?
  parentTodo   Todo?        @relation("TodoToTodo", fields: [parentTodoId], references: [id], onDelete: Cascade)
  subTodos     Todo[]       @relation("TodoToTodo")
}

enum TodoEnum {
  SIMPLE
  SEQUENTIAL
  SECTION
}

enum PriorityEnum {
  LOW
  MEDIUM
  HIGH
}
